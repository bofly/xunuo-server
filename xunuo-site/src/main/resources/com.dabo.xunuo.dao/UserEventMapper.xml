<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dabo.xunuo.dao.UserEventMapper">

    <sql id="TABLE">t_event</sql>

    <resultMap id="DATA" type="com.dabo.xunuo.entity.UserEvent">
        <id property="id" column="id" />
        <result property="userId" column="user_id"/>
        <result property="name" column="name"/>
        <result property="contactId" column="contact_id"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>
        <result property="eventTime" column="event_time"/>
        <result property="eventType" column="event_type"/>
        <result property="remindInterval" column="remind_interval"/>
        <result property="remindIntervalUnit" column="remind_interval_unit"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <resultMap id="SIMPLE_DATA" type="com.dabo.xunuo.entity.UserEvent">
        <id property="id" column="id" />
        <result property="eventTime" column="event_time"/>
    </resultMap>

    <!--新增-->
    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="entity.id">
        INSERT INTO
        <include refid="TABLE"/>
        (user_id,name,contact_id,
        update_time,create_time,event_time,event_type,
        remind_interval,remind_interval_unit,remark)
        VALUES
        (#{entity.userId},#{entity.name},#{entity.contactId},
        #{entity.updateTime},#{entity.createTime},#{entity.eventTime},#{entity.eventType},
        #{entity.remindInterval},#{entity.remindIntervalUnit},#{entity.remark})
    </insert>

    <insert id="update" parameterType="com.dabo.xunuo.entity.UserEvent">
        INSERT INTO
        <include refid="TABLE"/>
        (name,contact_id,update_time,event_time,event_type,remind_interval,remind_interval_unit,remark)
        VALUES
        (#{entity.name},#{entity.contactId},
        #{entity.updateTime},#{entity.eventTime},#{entity.eventType},
        #{entity.remindInterval},#{entity.remindIntervalUnit},#{entity.remark})
    </insert>

    <select id="getEventByUser" resultMap="DATA">
        SELECT *
        FROM <include refid="TABLE"/>
        WHERE user_id=#{userId}
        AND event_time <![CDATA[>=]]>  #{eventTime}
        ORDER BY ${field} ${direction}
        <if test="rowBounds!=null">
            LIMIT #{rowBounds.offSet}, #{rowBounds.limit}
        </if>
    </select>

    <select id="countEventByUser" resultType="Integer">
        SELECT count(*)
        FROM <include refid="TABLE"/>
        WHERE user_id=#{userId}
        AND event_time <![CDATA[>=]]> #{eventTime}
    </select>

    <select id="getById" resultMap="DATA">
        SELECT *
        FROM <include refid="TABLE"/>
        WHERE id=#{keyId}
    </select>

    <select id="countByType" resultType="Long">
        SELECT COUNT(*)
        FROM <include refid="TABLE"/>
        WHERE event_type=#{typeId}
    </select>

    <delete id="deleteByContactId">
        DELETE
        FROM <include refid="TABLE"/>
        WHERE contact_id=#{contactId}
    </delete>

    <select id="getEventByContact" resultMap="DATA">
        SELECT *
        FROM <include refid="TABLE"/>
        WHERE contact_id=#{contactId}
        AND event_time <![CDATA[>=]]>  #{eventTime}
        ORDER BY ${field} ${direction}
        <if test="rowBounds!=null">
            LIMIT #{rowBounds.offSet}, #{rowBounds.limit}
        </if>
    </select>
</mapper>